{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport classNames from 'classnames';\nimport { useContext } from 'react';\nimport { HiMoon, HiSun } from 'react-icons/hi';\nimport { mergeDeep } from '../../helpers/mergeDeep';\nimport { ThemeContext, useTheme } from '../Flowbite/ThemeContext';\nexport const DarkThemeToggle = _ref => {\n  let {\n    className,\n    theme: customTheme = {},\n    ...props\n  } = _ref;\n  const theme = mergeDeep(useTheme().theme.darkThemeToggle, customTheme);\n  const {\n    mode,\n    toggleMode\n  } = useContext(ThemeContext);\n  return _jsx(\"button\", {\n    \"aria-label\": \"Toggle dark mode\",\n    \"data-testid\": \"dark-theme-toggle\",\n    onClick: toggleMode,\n    type: \"button\",\n    className: classNames(theme.root.base, className),\n    ...props,\n    children: mode === 'dark' ? _jsx(HiSun, {\n      \"aria-label\": \"Currently dark mode\",\n      className: theme.root.icon\n    }) : _jsx(HiMoon, {\n      \"aria-label\": \"Currently light mode\",\n      className: theme.root.icon\n    })\n  });\n};","map":{"version":3,"names":["jsx","_jsx","classNames","useContext","HiMoon","HiSun","mergeDeep","ThemeContext","useTheme","DarkThemeToggle","_ref","className","theme","customTheme","props","darkThemeToggle","mode","toggleMode","onClick","type","root","base","children","icon"],"sources":["/Users/francisco/Documents/Curso desarrollo web/Proyectos/Proyectos/Portafolio/Proyecto React/pokedex/node_modules/flowbite-react/lib/esm/components/DarkThemeToggle/DarkThemeToggle.js"],"sourcesContent":["import { jsx as _jsx } from \"react/jsx-runtime\";\nimport classNames from 'classnames';\nimport { useContext } from 'react';\nimport { HiMoon, HiSun } from 'react-icons/hi';\nimport { mergeDeep } from '../../helpers/mergeDeep';\nimport { ThemeContext, useTheme } from '../Flowbite/ThemeContext';\nexport const DarkThemeToggle = ({ className, theme: customTheme = {}, ...props }) => {\n    const theme = mergeDeep(useTheme().theme.darkThemeToggle, customTheme);\n    const { mode, toggleMode } = useContext(ThemeContext);\n    return (_jsx(\"button\", { \"aria-label\": \"Toggle dark mode\", \"data-testid\": \"dark-theme-toggle\", onClick: toggleMode, type: \"button\", className: classNames(theme.root.base, className), ...props, children: mode === 'dark' ? (_jsx(HiSun, { \"aria-label\": \"Currently dark mode\", className: theme.root.icon })) : (_jsx(HiMoon, { \"aria-label\": \"Currently light mode\", className: theme.root.icon })) }));\n};\n"],"mappings":"AAAA,SAASA,GAAG,IAAIC,IAAI,QAAQ,mBAAmB;AAC/C,OAAOC,UAAU,MAAM,YAAY;AACnC,SAASC,UAAU,QAAQ,OAAO;AAClC,SAASC,MAAM,EAAEC,KAAK,QAAQ,gBAAgB;AAC9C,SAASC,SAAS,QAAQ,yBAAyB;AACnD,SAASC,YAAY,EAAEC,QAAQ,QAAQ,0BAA0B;AACjE,OAAO,MAAMC,eAAe,GAAGC,IAAA,IAAsD;EAAA,IAArD;IAAEC,SAAS;IAAEC,KAAK,EAAEC,WAAW,GAAG,CAAC,CAAC;IAAE,GAAGC;EAAM,CAAC,GAAAJ,IAAA;EAC5E,MAAME,KAAK,GAAGN,SAAS,CAACE,QAAQ,EAAE,CAACI,KAAK,CAACG,eAAe,EAAEF,WAAW,CAAC;EACtE,MAAM;IAAEG,IAAI;IAAEC;EAAW,CAAC,GAAGd,UAAU,CAACI,YAAY,CAAC;EACrD,OAAQN,IAAI,CAAC,QAAQ,EAAE;IAAE,YAAY,EAAE,kBAAkB;IAAE,aAAa,EAAE,mBAAmB;IAAEiB,OAAO,EAAED,UAAU;IAAEE,IAAI,EAAE,QAAQ;IAAER,SAAS,EAAET,UAAU,CAACU,KAAK,CAACQ,IAAI,CAACC,IAAI,EAAEV,SAAS,CAAC;IAAE,GAAGG,KAAK;IAAEQ,QAAQ,EAAEN,IAAI,KAAK,MAAM,GAAIf,IAAI,CAACI,KAAK,EAAE;MAAE,YAAY,EAAE,qBAAqB;MAAEM,SAAS,EAAEC,KAAK,CAACQ,IAAI,CAACG;IAAK,CAAC,CAAC,GAAKtB,IAAI,CAACG,MAAM,EAAE;MAAE,YAAY,EAAE,sBAAsB;MAAEO,SAAS,EAAEC,KAAK,CAACQ,IAAI,CAACG;IAAK,CAAC;EAAG,CAAC,CAAC;AAC7Y,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}