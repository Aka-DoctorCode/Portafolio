{"ast":null,"code":"var shorterNames = require('./shorter-css-color-names');\nvar REGEX = {\n  whitespace: /\\s+/g,\n  urlHexPairs: /%[\\dA-F]{2}/g,\n  quotes: /\"/g\n};\nfunction collapseWhitespace(str) {\n  return str.trim().replace(REGEX.whitespace, ' ');\n}\nfunction dataURIPayload(string) {\n  return encodeURIComponent(string).replace(REGEX.urlHexPairs, specialHexEncode);\n}\n\n// `#` gets converted to `%23`, so quite a few CSS named colors are shorter than\n// their equivalent URL-encoded hex codes.\nfunction colorCodeToShorterNames(string) {\n  Object.keys(shorterNames).forEach(function (key) {\n    if (shorterNames[key].test(string)) {\n      string = string.replace(shorterNames[key], key);\n    }\n  });\n  return string;\n}\nfunction specialHexEncode(match) {\n  switch (match) {\n    // Browsers tolerate these characters, and they're frequent\n    case '%20':\n      return ' ';\n    case '%3D':\n      return '=';\n    case '%3A':\n      return ':';\n    case '%2F':\n      return '/';\n    default:\n      return match.toLowerCase();\n    // compresses better\n  }\n}\n\nfunction svgToTinyDataUri(svgString) {\n  if (typeof svgString !== 'string') {\n    throw new TypeError('Expected a string, but received ' + typeof svgString);\n  }\n  // Strip the Byte-Order Mark if the SVG has one\n  if (svgString.charCodeAt(0) === 0xfeff) {\n    svgString = svgString.slice(1);\n  }\n  var body = colorCodeToShorterNames(collapseWhitespace(svgString)).replace(REGEX.quotes, \"'\");\n  return 'data:image/svg+xml,' + dataURIPayload(body);\n}\nsvgToTinyDataUri.toSrcset = function toSrcset(svgString) {\n  return svgToTinyDataUri(svgString).replace(/ /g, '%20');\n};\nmodule.exports = svgToTinyDataUri;","map":{"version":3,"names":["shorterNames","require","REGEX","whitespace","urlHexPairs","quotes","collapseWhitespace","str","trim","replace","dataURIPayload","string","encodeURIComponent","specialHexEncode","colorCodeToShorterNames","Object","keys","forEach","key","test","match","toLowerCase","svgToTinyDataUri","svgString","TypeError","charCodeAt","slice","body","toSrcset","module","exports"],"sources":["/Users/francisco/Documents/Curso desarrollo web/Proyectos/Proyectos/Portafolio/Proyecto React/pokedex/node_modules/mini-svg-data-uri/index.js"],"sourcesContent":["var shorterNames = require('./shorter-css-color-names');\nvar REGEX = {\n  whitespace: /\\s+/g,\n  urlHexPairs: /%[\\dA-F]{2}/g,\n  quotes: /\"/g,\n}\n\nfunction collapseWhitespace(str) {\n  return str.trim().replace(REGEX.whitespace, ' ');\n}\n\nfunction dataURIPayload(string) {\n  return encodeURIComponent(string)\n    .replace(REGEX.urlHexPairs, specialHexEncode);\n}\n\n// `#` gets converted to `%23`, so quite a few CSS named colors are shorter than\n// their equivalent URL-encoded hex codes.\nfunction colorCodeToShorterNames(string) {\n  Object.keys(shorterNames).forEach(function(key) {\n    if (shorterNames[key].test(string)) {\n      string = string.replace(shorterNames[key], key);\n    }\n  });\n\n  return string;\n}\n\nfunction specialHexEncode(match) {\n  switch (match) { // Browsers tolerate these characters, and they're frequent\n    case '%20': return ' ';\n    case '%3D': return '=';\n    case '%3A': return ':';\n    case '%2F': return '/';\n    default: return match.toLowerCase(); // compresses better\n  }\n}\n\nfunction svgToTinyDataUri(svgString) {\n  if (typeof svgString !== 'string') {\n    throw new TypeError('Expected a string, but received ' + typeof svgString);\n  }\n  // Strip the Byte-Order Mark if the SVG has one\n  if (svgString.charCodeAt(0) === 0xfeff) { svgString = svgString.slice(1) }\n\n  var body = colorCodeToShorterNames(collapseWhitespace(svgString))\n    .replace(REGEX.quotes, \"'\");\n  return 'data:image/svg+xml,' + dataURIPayload(body);\n}\n\nsvgToTinyDataUri.toSrcset = function toSrcset(svgString) {\n  return svgToTinyDataUri(svgString).replace(/ /g, '%20');\n}\n\nmodule.exports = svgToTinyDataUri;\n"],"mappings":"AAAA,IAAIA,YAAY,GAAGC,OAAO,CAAC,2BAA2B,CAAC;AACvD,IAAIC,KAAK,GAAG;EACVC,UAAU,EAAE,MAAM;EAClBC,WAAW,EAAE,cAAc;EAC3BC,MAAM,EAAE;AACV,CAAC;AAED,SAASC,kBAAkBA,CAACC,GAAG,EAAE;EAC/B,OAAOA,GAAG,CAACC,IAAI,EAAE,CAACC,OAAO,CAACP,KAAK,CAACC,UAAU,EAAE,GAAG,CAAC;AAClD;AAEA,SAASO,cAAcA,CAACC,MAAM,EAAE;EAC9B,OAAOC,kBAAkB,CAACD,MAAM,CAAC,CAC9BF,OAAO,CAACP,KAAK,CAACE,WAAW,EAAES,gBAAgB,CAAC;AACjD;;AAEA;AACA;AACA,SAASC,uBAAuBA,CAACH,MAAM,EAAE;EACvCI,MAAM,CAACC,IAAI,CAAChB,YAAY,CAAC,CAACiB,OAAO,CAAC,UAASC,GAAG,EAAE;IAC9C,IAAIlB,YAAY,CAACkB,GAAG,CAAC,CAACC,IAAI,CAACR,MAAM,CAAC,EAAE;MAClCA,MAAM,GAAGA,MAAM,CAACF,OAAO,CAACT,YAAY,CAACkB,GAAG,CAAC,EAAEA,GAAG,CAAC;IACjD;EACF,CAAC,CAAC;EAEF,OAAOP,MAAM;AACf;AAEA,SAASE,gBAAgBA,CAACO,KAAK,EAAE;EAC/B,QAAQA,KAAK;IAAI;IACf,KAAK,KAAK;MAAE,OAAO,GAAG;IACtB,KAAK,KAAK;MAAE,OAAO,GAAG;IACtB,KAAK,KAAK;MAAE,OAAO,GAAG;IACtB,KAAK,KAAK;MAAE,OAAO,GAAG;IACtB;MAAS,OAAOA,KAAK,CAACC,WAAW,EAAE;IAAE;EAAA;AAEzC;;AAEA,SAASC,gBAAgBA,CAACC,SAAS,EAAE;EACnC,IAAI,OAAOA,SAAS,KAAK,QAAQ,EAAE;IACjC,MAAM,IAAIC,SAAS,CAAC,kCAAkC,GAAG,OAAOD,SAAS,CAAC;EAC5E;EACA;EACA,IAAIA,SAAS,CAACE,UAAU,CAAC,CAAC,CAAC,KAAK,MAAM,EAAE;IAAEF,SAAS,GAAGA,SAAS,CAACG,KAAK,CAAC,CAAC,CAAC;EAAC;EAEzE,IAAIC,IAAI,GAAGb,uBAAuB,CAACR,kBAAkB,CAACiB,SAAS,CAAC,CAAC,CAC9Dd,OAAO,CAACP,KAAK,CAACG,MAAM,EAAE,GAAG,CAAC;EAC7B,OAAO,qBAAqB,GAAGK,cAAc,CAACiB,IAAI,CAAC;AACrD;AAEAL,gBAAgB,CAACM,QAAQ,GAAG,SAASA,QAAQA,CAACL,SAAS,EAAE;EACvD,OAAOD,gBAAgB,CAACC,SAAS,CAAC,CAACd,OAAO,CAAC,IAAI,EAAE,KAAK,CAAC;AACzD,CAAC;AAEDoB,MAAM,CAACC,OAAO,GAAGR,gBAAgB"},"metadata":{},"sourceType":"script","externalDependencies":[]}