{"ast":null,"code":"import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nimport classNames from 'classnames';\nimport { useId } from 'react';\nimport { mergeDeep } from '../../helpers/mergeDeep';\nimport { useTheme } from '../Flowbite/ThemeContext';\nexport const ToggleSwitch = _ref => {\n  let {\n    checked,\n    className,\n    color = 'blue',\n    disabled,\n    label,\n    name,\n    onChange,\n    theme: customTheme = {},\n    ...props\n  } = _ref;\n  const id = useId();\n  const theme = mergeDeep(useTheme().theme.toggleSwitch, customTheme);\n  const toggle = () => onChange(!checked);\n  const handleClick = event => {\n    event.preventDefault();\n    toggle();\n  };\n  const handleKeyPress = event => {\n    event.preventDefault();\n  };\n  return _jsxs(_Fragment, {\n    children: [name && checked && _jsx(\"input\", {\n      checked: checked,\n      hidden: true,\n      name: name,\n      readOnly: true,\n      type: \"checkbox\",\n      className: \"sr-only\"\n    }), _jsxs(\"button\", {\n      \"aria-checked\": checked,\n      \"aria-labelledby\": `${id}-flowbite-toggleswitch-label`,\n      disabled: disabled,\n      id: `${id}-flowbite-toggleswitch`,\n      onClick: handleClick,\n      onKeyPress: handleKeyPress,\n      role: \"switch\",\n      tabIndex: 0,\n      type: \"button\",\n      className: classNames(theme.root.base, theme.root.active[disabled ? 'off' : 'on'], className),\n      ...props,\n      children: [_jsx(\"div\", {\n        \"data-testid\": \"flowbite-toggleswitch-toggle\",\n        className: classNames(theme.toggle.base, theme.toggle.checked[checked ? 'on' : 'off'], !disabled && checked && theme.toggle.checked.color[color])\n      }), _jsx(\"span\", {\n        \"data-testid\": \"flowbite-toggleswitch-label\",\n        id: `${id}-flowbite-toggleswitch-label`,\n        className: theme.root.label,\n        children: label\n      })]\n    })]\n  });\n};","map":{"version":3,"names":["jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","classNames","useId","mergeDeep","useTheme","ToggleSwitch","_ref","checked","className","color","disabled","label","name","onChange","theme","customTheme","props","id","toggleSwitch","toggle","handleClick","event","preventDefault","handleKeyPress","children","hidden","readOnly","type","onClick","onKeyPress","role","tabIndex","root","base","active"],"sources":["/Users/francisco/Documents/Curso desarrollo web/Proyectos/Proyectos/Portafolio/Proyecto React/pokedex/node_modules/flowbite-react/lib/esm/components/ToggleSwitch/ToggleSwitch.js"],"sourcesContent":["import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nimport classNames from 'classnames';\nimport { useId } from 'react';\nimport { mergeDeep } from '../../helpers/mergeDeep';\nimport { useTheme } from '../Flowbite/ThemeContext';\nexport const ToggleSwitch = ({ checked, className, color = 'blue', disabled, label, name, onChange, theme: customTheme = {}, ...props }) => {\n    const id = useId();\n    const theme = mergeDeep(useTheme().theme.toggleSwitch, customTheme);\n    const toggle = () => onChange(!checked);\n    const handleClick = (event) => {\n        event.preventDefault();\n        toggle();\n    };\n    const handleKeyPress = (event) => {\n        event.preventDefault();\n    };\n    return (_jsxs(_Fragment, { children: [name && checked && _jsx(\"input\", { checked: checked, hidden: true, name: name, readOnly: true, type: \"checkbox\", className: \"sr-only\" }), _jsxs(\"button\", { \"aria-checked\": checked, \"aria-labelledby\": `${id}-flowbite-toggleswitch-label`, disabled: disabled, id: `${id}-flowbite-toggleswitch`, onClick: handleClick, onKeyPress: handleKeyPress, role: \"switch\", tabIndex: 0, type: \"button\", className: classNames(theme.root.base, theme.root.active[disabled ? 'off' : 'on'], className), ...props, children: [_jsx(\"div\", { \"data-testid\": \"flowbite-toggleswitch-toggle\", className: classNames(theme.toggle.base, theme.toggle.checked[checked ? 'on' : 'off'], !disabled && checked && theme.toggle.checked.color[color]) }), _jsx(\"span\", { \"data-testid\": \"flowbite-toggleswitch-label\", id: `${id}-flowbite-toggleswitch-label`, className: theme.root.label, children: label })] })] }));\n};\n"],"mappings":"AAAA,SAASA,GAAG,IAAIC,IAAI,EAAEC,IAAI,IAAIC,KAAK,EAAEC,QAAQ,IAAIC,SAAS,QAAQ,mBAAmB;AACrF,OAAOC,UAAU,MAAM,YAAY;AACnC,SAASC,KAAK,QAAQ,OAAO;AAC7B,SAASC,SAAS,QAAQ,yBAAyB;AACnD,SAASC,QAAQ,QAAQ,0BAA0B;AACnD,OAAO,MAAMC,YAAY,GAAGC,IAAA,IAAgH;EAAA,IAA/G;IAAEC,OAAO;IAAEC,SAAS;IAAEC,KAAK,GAAG,MAAM;IAAEC,QAAQ;IAAEC,KAAK;IAAEC,IAAI;IAAEC,QAAQ;IAAEC,KAAK,EAAEC,WAAW,GAAG,CAAC,CAAC;IAAE,GAAGC;EAAM,CAAC,GAAAV,IAAA;EACnI,MAAMW,EAAE,GAAGf,KAAK,EAAE;EAClB,MAAMY,KAAK,GAAGX,SAAS,CAACC,QAAQ,EAAE,CAACU,KAAK,CAACI,YAAY,EAAEH,WAAW,CAAC;EACnE,MAAMI,MAAM,GAAGA,CAAA,KAAMN,QAAQ,CAAC,CAACN,OAAO,CAAC;EACvC,MAAMa,WAAW,GAAIC,KAAK,IAAK;IAC3BA,KAAK,CAACC,cAAc,EAAE;IACtBH,MAAM,EAAE;EACZ,CAAC;EACD,MAAMI,cAAc,GAAIF,KAAK,IAAK;IAC9BA,KAAK,CAACC,cAAc,EAAE;EAC1B,CAAC;EACD,OAAQxB,KAAK,CAACE,SAAS,EAAE;IAAEwB,QAAQ,EAAE,CAACZ,IAAI,IAAIL,OAAO,IAAIX,IAAI,CAAC,OAAO,EAAE;MAAEW,OAAO,EAAEA,OAAO;MAAEkB,MAAM,EAAE,IAAI;MAAEb,IAAI,EAAEA,IAAI;MAAEc,QAAQ,EAAE,IAAI;MAAEC,IAAI,EAAE,UAAU;MAAEnB,SAAS,EAAE;IAAU,CAAC,CAAC,EAAEV,KAAK,CAAC,QAAQ,EAAE;MAAE,cAAc,EAAES,OAAO;MAAE,iBAAiB,EAAG,GAAEU,EAAG,8BAA6B;MAAEP,QAAQ,EAAEA,QAAQ;MAAEO,EAAE,EAAG,GAAEA,EAAG,wBAAuB;MAAEW,OAAO,EAAER,WAAW;MAAES,UAAU,EAAEN,cAAc;MAAEO,IAAI,EAAE,QAAQ;MAAEC,QAAQ,EAAE,CAAC;MAAEJ,IAAI,EAAE,QAAQ;MAAEnB,SAAS,EAAEP,UAAU,CAACa,KAAK,CAACkB,IAAI,CAACC,IAAI,EAAEnB,KAAK,CAACkB,IAAI,CAACE,MAAM,CAACxB,QAAQ,GAAG,KAAK,GAAG,IAAI,CAAC,EAAEF,SAAS,CAAC;MAAE,GAAGQ,KAAK;MAAEQ,QAAQ,EAAE,CAAC5B,IAAI,CAAC,KAAK,EAAE;QAAE,aAAa,EAAE,8BAA8B;QAAEY,SAAS,EAAEP,UAAU,CAACa,KAAK,CAACK,MAAM,CAACc,IAAI,EAAEnB,KAAK,CAACK,MAAM,CAACZ,OAAO,CAACA,OAAO,GAAG,IAAI,GAAG,KAAK,CAAC,EAAE,CAACG,QAAQ,IAAIH,OAAO,IAAIO,KAAK,CAACK,MAAM,CAACZ,OAAO,CAACE,KAAK,CAACA,KAAK,CAAC;MAAE,CAAC,CAAC,EAAEb,IAAI,CAAC,MAAM,EAAE;QAAE,aAAa,EAAE,6BAA6B;QAAEqB,EAAE,EAAG,GAAEA,EAAG,8BAA6B;QAAET,SAAS,EAAEM,KAAK,CAACkB,IAAI,CAACrB,KAAK;QAAEa,QAAQ,EAAEb;MAAM,CAAC,CAAC;IAAE,CAAC,CAAC;EAAE,CAAC,CAAC;AACj5B,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}